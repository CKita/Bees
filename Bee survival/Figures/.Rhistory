layout(matrix(c(1,2,3,1,2,4), ncol=2), width=c(0.7,0.3), height = c(0.1,0.3,0.7))
layout.show(4)
###  PAINEL 1
par(mar=c(0.3,1,1,0.3), las=1, cex=1.2, bty="n")
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(0,1), ylim=c(0,1))
sp <-c("Species", "setosa", "versicolor", "virginica")
text(x=c(0.2, 0.4, 0.6, 0.8), y=rep(0.5,4), cex = c(1, 0.7, 0.7, 0.7), labels=sp )
cols <- c(rgb(red=1, green=1, blue=1, alpha=0.3),
rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3)
)
points(c(0, 0.33, 0.5, 0.7), rep(0.5,4), pch=15, col=cols, cex=2)
### PAINEL 2
par(mar=c(0,5,0,10), las=1, cex=1.2, bty="n")
head(iris)
iris
set <- iris$Sepal.Length[1:50]
set
denset <- density(set)
denset
ver <- iris$Sepal.Length[51:100]
ver
denver <- density(ver)
denver
vir<- iris$Sepal.Length[101:150]
denvir <- density(vir)
denvir
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=range(c(denset$x,denver$x, denvir$x)), ylim=range(c(denset$y, denver$y, denvir$y)), col="transparent")
cor <- c(rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3))
cor
polygon(x=c(denset$x, denver$x, denvir$x), y=c(denset$y, denver$y, denvir$y),col= cor)
#### PAINEL 3
par(mar=c(5, 5, 0, 0))
head(iris)
setW <- iris$Sepal.Width[1:50]
set <- iris$Sepal.Length[1:50]
verW <- iris$Sepal.Width[51:100]
ver <- iris$Sepal.Length[51:100]
virW <- iris$Sepal.Width[101:150]
vir<- iris$Sepal.Length[101:150]
plot(x=NULL,y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(3,8), ylim=c(2,4), bty="o")
points(x=iris$Sepal.Length, y= iris$Sepal.Width, pch=16, col= cor[as.factor(iris$Species, levels="setosa", "versicolor", "virginica")])
axis(side=1, cex.axis=1)
mtext(text="Sepal length", line=2.5, cex=1.3, side=1)
axis(side=2, cex=1)
mtext(text="Sepal Width", side=2, line=2, cex=1.3, las=0)
help(xlim)
par(mar=c(5, 5, 0, 0))
head(iris)
setW <- iris$Sepal.Width[1:50]
set <- iris$Sepal.Length[1:50]
verW <- iris$Sepal.Width[51:100]
ver <- iris$Sepal.Length[51:100]
virW <- iris$Sepal.Width[101:150]
vir<- iris$Sepal.Length[101:150]
plot(x=NULL,y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(4.5,8), ylim=c(2,4), bty="o")
points(x=iris$Sepal.Length, y= iris$Sepal.Width, pch=16, col= cor[as.factor(iris$Species, levels="setosa", "versicolor", "virginica")])
help(xlim)
axis(side=1, cex.axis=1)
mtext(text="Sepal length", line=2.5, cex=1.3, side=1)
axis(side=2, cex=1)
mtext(text="Sepal Width", side=2, line=2, cex=1.3, las=0)
par(mar=c(5, 5, 0, 0))
head(iris)
setW <- iris$Sepal.Width[1:50]
set <- iris$Sepal.Length[1:50]
verW <- iris$Sepal.Width[51:100]
ver <- iris$Sepal.Length[51:100]
virW <- iris$Sepal.Width[101:150]
vir<- iris$Sepal.Length[101:150]
plot(x=NULL,y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(4.5,8), ylim=c(2,4), bty="o")
points(x=iris$Sepal.Length, y= iris$Sepal.Width, pch=16, col= cor[as.factor(iris$Species, levels="setosa", "versicolor", "virginica")])
axis(side=1, cex.axis=1)
mtext(text="Sepal length", line=2.5, cex=1.3, side=1)
axis(side=2, cex=1)
mtext(text="Sepal Width", side=2, line=2, cex=1.3, las=0)
png("irisGraf.png", width = 800, height= 600, pointsize=12)
X11(width=10, height=10)
layout(matrix(c(1,2,3,1,2,4), ncol=2), width=c(0.7,0.3), height = c(0.1,0.3,0.7))
layout.show(4)
###  PAINEL 1
par(mar=c(0.3,1,1,0.3), las=1, cex=1.2, bty="n")
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(0,1), ylim=c(0,1))
sp <-c("Species", "setosa", "versicolor", "virginica")
text(x=c(0.2, 0.4, 0.6, 0.8), y=rep(0.5,4), cex = c(1, 0.7, 0.7, 0.7), labels=sp )
cols <- c(rgb(red=1, green=1, blue=1, alpha=0.3),
rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3)
)
points(c(0, 0.33, 0.5, 0.7), rep(0.5,4), pch=15, col=cols, cex=2)
### PAINEL 2
par(mar=c(0,5,0,10), las=1, cex=1.2, bty="n")
head(iris)
iris
set <- iris$Sepal.Length[1:50]
set
denset <- density(set)
denset
ver <- iris$Sepal.Length[51:100]
ver
denver <- density(ver)
denver
vir<- iris$Sepal.Length[101:150]
denvir <- density(vir)
denvir
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=range(c(denset$x,denver$x, denvir$x)), ylim=range(c(denset$y, denver$y, denvir$y)), col="transparent")
cor <- c(rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3))
cor
polygon(x=c(denset$x, denver$x, denvir$x), y=c(denset$y, denver$y, denvir$y),col= cor)
#### PAINEL 3
par(mar=c(5, 5, 0, 0))
head(iris)
setW <- iris$Sepal.Width[1:50]
set <- iris$Sepal.Length[1:50]
verW <- iris$Sepal.Width[51:100]
ver <- iris$Sepal.Length[51:100]
virW <- iris$Sepal.Width[101:150]
vir<- iris$Sepal.Length[101:150]
plot(x=NULL,y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(4.5,8), ylim=c(2,4), bty="o")
points(x=iris$Sepal.Length, y= iris$Sepal.Width, pch=16, col= cor[as.factor(iris$Species, levels="setosa", "versicolor", "virginica")])
axis(side=1, cex.axis=1)
mtext(text="Sepal length", line=2.5, cex=1.3, side=1)
axis(side=2, cex=1)
mtext(text="Sepal Width", side=2, line=2, cex=1.3, las=0)
mtext(text="Sepal Width", side=3, line=2, cex=1.3, las=0)
mtext(text="Sepal Width", side=2, line=3, cex=1.3, las=0)
png("irisGraf.png", width = 800, height= 600, pointsize=12)
X11(width=10, height=10)
layout(matrix(c(1,2,3,1,2,4), ncol=2), width=c(0.7,0.3), height = c(0.1,0.3,0.7))
layout.show(4)
###  PAINEL 1
par(mar=c(0.3,1,1,0.3), las=1, cex=1.2, bty="n")
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(0,1), ylim=c(0,1))
sp <-c("Species", "setosa", "versicolor", "virginica")
text(x=c(0.2, 0.4, 0.6, 0.8), y=rep(0.5,4), cex = c(1, 0.7, 0.7, 0.7), labels=sp )
cols <- c(rgb(red=1, green=1, blue=1, alpha=0.3),
rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3)
)
points(c(0, 0.33, 0.5, 0.7), rep(0.5,4), pch=15, col=cols, cex=2)
par(mar=c(0,5,0,10), las=1, cex=1.2, bty="n")
head(iris)
iris
set <- iris$Sepal.Length[1:50]
set
denset <- density(set)
denset
ver <- iris$Sepal.Length[51:100]
ver
denver <- density(ver)
denver
vir<- iris$Sepal.Length[101:150]
denvir <- density(vir)
denvir
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=range(c(denset$x,denver$x, denvir$x)), ylim=range(c(denset$y, denver$y, denvir$y)), col="transparent")
cor <- c(rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3))
cor
polygon(x=c(denset$x, denver$x, denvir$x), y=c(denset$y, denver$y, denvir$y),col= cor)
par(mar=c(5, 5, 0, 0))
head(iris)
setW <- iris$Sepal.Width[1:50]
set <- iris$Sepal.Length[1:50]
verW <- iris$Sepal.Width[51:100]
ver <- iris$Sepal.Length[51:100]
virW <- iris$Sepal.Width[101:150]
vir<- iris$Sepal.Length[101:150]
plot(x=NULL,y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=c(4.5,8), ylim=c(2,4), bty="o")
points(x=iris$Sepal.Length, y= iris$Sepal.Width, pch=16, col= cor[as.factor(iris$Species, levels="setosa", "versicolor", "virginica")])
axis(side=1, cex.axis=1)
mtext(text="Sepal length", line=2.5, cex=1.3, side=1)
axis(side=2, cex=1)
mtext(text="Sepal Width", side=2, line=3, cex=1.3, las=0)
par(mar=c(0,0,0,0), las=1, cex=1.2, bty="n")
par(mar=c(5, 5, 0, 0))
setW <- iris$Sepal.Width[1:50]
densetW <- density(setW)
verW <- iris$Sepal.Width[51:100]
denverW <- density(verW)
virW <- iris$Sepal.Width[101:150]
denvirW <- density(virW)
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=range(c(densetW$x,denverW$x, denvirW$x)), ylim=range(c(densetW$y, denverW$y, denvirW$y)))
### PAINEL 2
x11()
par(mar=c(0,5,0,10), las=1, cex=1.2, bty="n")
plot(x=NULL, y=NULL, type="n", ann=FALSE, xaxt="n", yaxt="n", xlim=range(c(denset$x,denver$x, denvir$x)), ylim=range(c(denset$y, denver$y, denvir$y)), col="transparent")
cor <- c(rgb(red=0, green=0, blue=0, alpha=0.3),
rgb(red=0, green = 1, blue=1, alpha=0.3),
rgb(red=0, green = 0, blue=1, alpha=0.3))
polygon(x=c(denset$x, denver$x, denvir$x), y=c(denset$y, denver$y, denvir$y),col= cor)
citation()
citation()
R.version.string
# installing/loading the latest installr package:
install.packages("installr"); library(installr) # install+load installr
updateR() # updating R.
citation()
install.packages("installr")
library(installr)
updateR()
q()
citation (compute.es)
citation ("compute.es")
install.packages("compute.es")
git config --global user.email "c.akemikita@gmail.com"
git config --global user.name "Cristina"
setwd("~/GitHub/Bees/Lethal and Sublethal/Data")
dados_completos <- read.csv("let_sublet.csv", h= T, dec =".", sep = ",")
dados_completos$nature_x <- as.factor(dados_completos$nature_x)
dados_completos$study_type <- as.factor(dados_completos$study_type)
dados_completos$effect_type <- as.factor(dados_completos$effect_type)
dados_completos$pesticide_effect <- as.factor(dados_completos$pesticide_effect)
model.geral <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.geral)
library(metafor)
model.geral <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.geral)
library(devtools)
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
install.packages("rlang")
install.packages("rlang")
orchard_plot(model.geral, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "pink1") +
scale_fill_manual(values = "seagreen3") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
install.packages("rlang")
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
library(devtools)
library(orchaRd)
library(patchwork)
library(tidyverse)
orchard_plot(model.geral, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "pink1") +
scale_fill_manual(values = "seagreen3") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
sub <- read.csv("sub.csv", h= T, dec =".", sep = ",")
model.sub <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = sub)
library(metafor)
sub <- read.csv("sub.csv", h= T, dec =".", sep = ",")
model.sub <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = sub)
summary(model.sub)
orchard_plot(model.sub, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "pink1") +
scale_fill_manual(values = "seagreen3") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
sub.sensi.out <- read.csv("sub_sensi_out.csv", h= T, dec =".", sep = ",")
model.sub.sensi.out <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = sub.sensi.out)
summary(model.sub.sensi.out)
model.1f <- rma.mv(yi, vi, mods = ~pesticide_effect -1, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
model.1 <- rma.mv(yi, vi, mods= ~pesticide_effect, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos, control = list(optimizer="optim", optmethod="Nelder-Mead"))
summary(model.1)
model.1f <- rma.mv(yi, vi, mods = ~pesticide_effect -1, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.1f)
orchard_plot(model.1f, mod = "pesticide_effect", xlab = "Hedges' g") +
labs(y = " ") +
scale_fill_manual(values = c( "slateblue1", "sienna1")) +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
legend.position = "top") +
coord_flip() +
scale_y_discrete(labels = c("Lethal", "Sublethal"))
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "pink1") +
scale_fill_manual(values = "seagreen3") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
model.1 <- rma.mv(yi, vi, mods= ~pesticide_effect, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos, control = list(optimizer="optim", optmethod="Nelder-Mead"))
summary(model.1)
model.1f <- rma.mv(yi, vi, mods = ~pesticide_effect -1, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.1f)
orchard_plot(model.1f, mod = "pesticide_effect", xlab = "Hedges' g") +
labs(y = " ") +
scale_fill_manual(values = c( "slateblue1", "sienna1")) +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
legend.position = "top") +
coord_flip() +
scale_y_discrete(labels = c("Lethal", "Sublethal"))
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual() +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "green")
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "aquamarine3") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "aquamarine4") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "aquamarine2") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "cyan3") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "darkturquoise") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "cyan4") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "#69b3a2") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "tiffany_blue") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "#00A087B2") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
setwd("~/GitHub/Bees/Lethal and Sublethal/Figures")
tiff('sensibility_test_sublet.tiff', units="in", width=5, height=6, res=1200, compression = 'lzw')
orchard_plot(model.sub.sensi.out, xlab = "Hedges' g") +
labs(y = "Overall effect") +
scale_color_manual(values = "#00A087B2") +
scale_fill_manual(values = "sienna1") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
dev.off()
setwd("~/GitHub/Bees/Bee survival/Data")
dat <- read.csv("dados_sobrevivencia.csv", h= T, dec =".", sep = ",")
library(metafor)
effects_t <- escalc("OR", dat$ai,dat$bi, dat$ci, dat$di, dat$n1i, dat$n2i)
dat_comp <- cbind(dat, effects_t)
dados <- read.table("data_comp.csv", h=T, dec=",", sep = ";")
surv_sensi2<- read.csv("survival_sensi_out2.csv", h= T, dec =".", sep = ",")
View(surv_sensi2)
model.surv.sensi.out2 <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, control = list(optimizer="optim", optmethod="Nelder-Mead"), data = surv_sensi2)
spp <- tnrs_match_names(unique(surv_sensi2$bee_specie), context_name = "Animals")
spp <- tnrs_match_names(unique(surv_sensi2$bee_specie), context_name = "Animals")
library(scales)
library(ape)
library(rotl)
spp <- tnrs_match_names(unique(surv_sensi2$bee_specie), context_name = "Animals")
my_tree = tol_induced_subtree(ott_ids=spp$ott_id)
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
taxon_map=structure(spp$search_string, names=spp$unique_name)
my_tree$tip.label=taxon_map[otl_tips]
my_tree.ult = compute.brlen(my_tree, method = "Grafen")
plot(my_tree.ult,no.margin=T)
model.surv.sensi.out2 <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, control = list(optimizer="optim", optmethod="Nelder-Mead"), data = surv_sensi2)
cov.matrix = vcv(my_tree.ult,corr=T)
cov.matrix[,0]
model.surv.sensi.out2 <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, control = list(optimizer="optim", optmethod="Nelder-Mead"), data = surv_sensi2)
summary(model.surv.sensi.out2)
orchard_plot(model.surv.sensi.out2, xlab = "Odds ratio") +
labs(y = "Survival") + # troca o nome do eixo y
scale_color_manual(values = "pink1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "seagreen3") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip()
orchard_plot(model.surv.sensi.out2, xlab = "Odds ratio") +
labs(y = "Survival") + # troca o nome do eixo y
scale_color_manual(values = "slateblue1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "yellow") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip()
setwd("~/GitHub/Bees/Bee survival/Figures")
tiff('survival_sensibility_test.tiff', units="in", width=5, height=6, res=1200, compression = 'lzw')
orchard_plot(model.surv.sensi.out2, xlab = "Odds ratio") +
labs(y = "Survival") + # troca o nome do eixo y
scale_color_manual(values = "slateblue1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "yellow") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip()
dev.off()
