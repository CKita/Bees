dados_completos <- read.csv("effects_complete.csv", h= T, dec =".", sep = ",")
dados_completos$nature_x <- as.factor(dados_completos$nature_x)
dados_completos$study_type <- as.factor(dados_completos$study_type)
dados_completos$effect_type <- as.factor(dados_completos$effect_type)
#Abrindo o pacote metafor
library(metafor)
model.geral <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.geral)
library(orchaRd)
library(patchwork)
library(tidyverse)
library(metafor)
library(ggplot2)
orchard_plot(model.geral, xlab = "Hedges' g") +
labs(y = "Intercept") + # troca o nome do eixo y
scale_color_manual(values = "pink1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "seagreen3") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip() #para colocar a variavel resposta no y
dados_completos <- read.csv("effects_complete.csv", h= T, dec =".", sep = ",")
dados_completos$nature_x <- as.factor(dados_completos$nature_x)
dados_completos$study_type <- as.factor(dados_completos$study_type)
dados_completos$effect_type <- as.factor(dados_completos$effect_type)
#Abrindo o pacote metafor
library(metafor)
library(orchaRd)
library(patchwork)
library(tidyverse)
library(metafor)
library(ggplot2)
model.1 <- rma.mv(yi, vi, mods= ~effect_type, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.1)
model.1f <- rma.mv(yi, vi, mods = ~effect_type -1, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.1f)
orchard_plot(model.1f, mod = "Effect type", xlab = "Hedges' g") +
labs(y = " ") +
scale_fill_manual(values = c( "slateblue1", "sienna1")) +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
legend.position = "top") +
coord_flip() +
scale_y_discrete(labels = c("Community", "Pollination"))
setwd("C:/Users/Cristina/Desktop/analyses_Cristina/survival")
dat <- read.csv("dados_sobrevivencia.csv", h= T, dec =".", sep = ",")
effects_t <- escalc("OR", dat$ai,dat$bi, dat$ci, dat$di, dat$n1i, dat$n2i)
dat_comp <- cbind(dat, effects_t)
#salvando
write.csv2(dat_comp, "data_comp.csv", row.names = F) #estou salvando assim para fazer a matriz de covariancia filogenetica
write.csv(dat_comp, "data_comp_2.csv", row.names = F)
dados <- read.table("data_comp.csv", h=T, dec=",", sep = ";")
library(scales)
library(ape)
library(rotl)
spp <- tnrs_match_names(unique(dados$bee_specie), context_name = "Animals") #aqui para procurar os nomes das minhas spp de abelhas
my_tree = tol_induced_subtree(ott_ids=spp$ott_id) #aqui estou criando uma sub arvore com as minhas especies de abelhas
#daqui para baixo estou vendos as distancias filogeneticas e criando a matriz de covariancia
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
taxon_map=structure(spp$search_string, names=spp$unique_name)
my_tree$tip.label=taxon_map[otl_tips]
my_tree.ult = compute.brlen(my_tree, method = "Grafen")
cov.matrix = vcv(my_tree.ult,corr=T)
library(metafor)
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
summary(survival)
library(orchaRd)
library(patchwork)
library(tidyverse)
orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Intercept") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
setwd("C:/Users/Cristina/Desktop/analise_dados_meta/survival")
dat <- read.csv("dados_sobrevivencia.csv", h= T, dec =".", sep = ",")
#abrindo o pacote necessario
library(metafor)
effects_t <- escalc("OR", dat$ai,dat$bi, dat$ci, dat$di, dat$n1i, dat$n2i)
dat_comp <- cbind(dat, effects_t)
#salvando
write.csv2(dat_comp, "data_comp.csv", row.names = F) #estou salvando assim para fazer a matriz de covariancia filogenetica
write.csv(dat_comp, "data_comp_2.csv", row.names = F)
dados <- read.table("data_comp.csv", h=T, dec=",", sep = ";")
library(scales)
library(ape)
library(rotl)
spp <- tnrs_match_names(unique(dados$bee_specie), context_name = "Animals") #aqui para procurar os nomes das minhas spp de abelhas
my_tree = tol_induced_subtree(ott_ids=spp$ott_id) #aqui estou criando uma sub arvore com as minhas especies de abelhas
#daqui para baixo estou vendos as distancias filogeneticas e criando a matriz de covariancia
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
taxon_map=structure(spp$search_string, names=spp$unique_name)
my_tree$tip.label=taxon_map[otl_tips]
my_tree.ult = compute.brlen(my_tree, method = "Grafen")
plot(my_tree.ult,no.margin=T) #vamos ver como ficou
cov.matrix = vcv(my_tree.ult,corr=T)
cov.matrix[,0]
library(metafor)
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
summary(survival)
library(orchaRd)
library(patchwork)
library(tidyverse)
orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
surv_graph <- orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
tiff("surv_graph", units="cm", width=20, height=15, res=300, pointsize=6)
surv_graph <- orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
tiff("surv_graph", units="cm", width=20, height=15, res=300, pointsize=6)
ggsave("survival", surv_graph, width=5, height=7, units="cm", dpi=300)
surv_graph <- orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
ggsave("survival", surv_graph, width=5, height=7, units="cm", dpi=300)
png("teste.png", width = 4, height = 4, units = 'in', res = 300)
surv_graph <- orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
dev.off()
ggsave(
teste,
plot = last_plot(),
device = NULL,
path = NULL,
scale = 1,
width = NA,
height = NA,
units = c("in"),
dpi = 300)
imagem <- orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
ggsave(
imagem,
plot = last_plot(),
device = NULL,
path = NULL,
scale = 1,
width = NA,
height = NA,
units = c("in"),
dpi = 300)
ggsave(
imagem,
plot = last_plot(),
device = png,
path = NULL,
scale = 1,
width = NA,
height = NA,
units = c("in"),
dpi = 300)
dat <- read.csv("dados_sobrevivencia.csv", h= T, dec =".", sep = ",")
View(dat)
#abrindo o pacote necessario
library(metafor)
effects_t <- escalc("OR", dat$ai,dat$bi, dat$ci, dat$di, dat$n1i, dat$n2i)
View(effects_t)
#salvando
write.csv2(dat_comp, "data_comp.csv", row.names = F) #estou salvando assim para fazer a matriz de covariancia filogenetica
dados <- read.table("data_comp.csv", h=T, dec=",", sep = ";")
View(dados)
#criando matrix de covariancia filogenetica para inserir como variavel aleatoria
install.packages("scales")
istall.packages("ape")
install.packages("ape")
install.packages("rotl")
library(scales)
library(ape)
library(rotl)
spp <- tnrs_match_names(unique(dados$bee_specie), context_name = "Animals") #aqui para procurar os nomes das minhas spp de abelhas
my_tree = tol_induced_subtree(ott_ids=spp$ott_id) #aqui estou criando uma sub arvore com as minhas especies de abelhas
#daqui para baixo estou vendos as distancias filogeneticas e criando a matriz de covariancia
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
taxon_map=structure(spp$search_string, names=spp$unique_name)
my_tree$tip.label=taxon_map[otl_tips]
my_tree.ult = compute.brlen(my_tree, method = "Grafen")
cov.matrix = vcv(my_tree.ult,corr=T)
cov.matrix[,0]
library(metafor)
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
summary(survival)
install.packages("devtools")
install.packages("devtools")
install.packages("tidyverse")
install.packages("metafor")
install.packages("metafor")
install.packages("patchwork")
install.packages("R.rsp")
install.packages("ggplot2")
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
summary(survival)
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
dat <- read.csv("dados_sobrevivencia.csv", h= T, dec =".", sep = ",")
#abrindo o pacote necessario
library(metafor)
effects_t <- escalc("OR", dat$ai,dat$bi, dat$ci, dat$di, dat$n1i, dat$n2i)
dat_comp <- cbind(dat, effects_t)
#salvando
write.csv2(dat_comp, "data_comp.csv", row.names = F) #estou salvando assim para fazer a matriz de covariancia filogenetica
dados <- read.table("data_comp.csv", h=T, dec=",", sep = ";")
install.packages("scales")
install.packages("ape")
install.packages("rotl")
spp <- tnrs_match_names(unique(dados$bee_specie), context_name = "Animals") #aqui para procurar os nomes das minhas spp de abelhas
my_tree = tol_induced_subtree(ott_ids=spp$ott_id) #aqui estou criando uma sub arvore com as minhas especies de abelhas
#daqui para baixo estou vendos as distancias filogeneticas e criando a matriz de covariancia
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
library(scales)
library(ape)
library(rotl)
library(rotl)
spp <- tnrs_match_names(unique(dados$bee_specie), context_name = "Animals") #aqui para procurar os nomes das minhas spp de abelhas
my_tree = tol_induced_subtree(ott_ids=spp$ott_id) #aqui estou criando uma sub arvore com as minhas especies de abelhas
#daqui para baixo estou vendos as distancias filogeneticas e criando a matriz de covariancia
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
taxon_map=structure(spp$search_string, names=spp$unique_name)
my_tree$tip.label=taxon_map[otl_tips]
my_tree.ult = compute.brlen(my_tree, method = "Grafen")
cov.matrix = vcv(my_tree.ult,corr=T)
cov.matrix[,0]
library(metafor)
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
summary(survival)
install.packages("devtools")
install.packages("devtools")
install.packages("tidyverse")
install.packages("patchwork")
install.packages("R.rsp")
install.packages("ggplot2")
library(devtools)
library(tidyverse)
library(patchwork)
library(R.rsp)
library(ggplot2)
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
library(orchaRd)
orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
library(devtools)
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
library(devtools)
library(tidyverse)
library(metafor)
library(patchwork)
library(R.rsp)
library(ggplot2)
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
install.packages("devtools")
install.packages("devtools")
library(devtools)
devtools::install_github("itchyshin/orchard_plot", subdir = "orchaRd", force = TRUE, build_vignettes = TRUE)
dat <- read.csv("dados_sobrevivencia.csv", h= T, dec =".", sep = ",")
#abrindo o pacote necessario
library(metafor)
effects_t <- escalc("OR", dat$ai,dat$bi, dat$ci, dat$di, dat$n1i, dat$n2i)
dat_comp <- cbind(dat, effects_t)
#salvando
write.csv2(dat_comp, "data_comp.csv", row.names = F) #estou salvando assim para fazer a matriz de covariancia filogenetica
dados <- read.table("data_comp.csv", h=T, dec=",", sep = ";")
library(scales)
library(ape)
library(rotl)
spp <- tnrs_match_names(unique(dados$bee_specie), context_name = "Animals") #aqui para procurar os nomes das minhas spp de abelhas
my_tree = tol_induced_subtree(ott_ids=spp$ott_id) #aqui estou criando uma sub arvore com as minhas especies de abelhas
#daqui para baixo estou vendos as distancias filogeneticas e criando a matriz de covariancia
otl_tips=strip_ott_ids(my_tree$tip.label, remove_underscores=TRUE)
taxon_map=structure(spp$search_string, names=spp$unique_name)
my_tree$tip.label=taxon_map[otl_tips]
my_tree.ult = compute.brlen(my_tree, method = "Grafen")
cov.matrix = vcv(my_tree.ult,corr=T)
cov.matrix[,0]
survival <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|bee_specie, ~1|agrochemical, ~1|hours_after_exposure, ~1|exposure_type), method="REML",  # "REML" = multi-level
R = list(bee_specie = cov.matrix),digits = 3, data = dados)   #aqui que entra a matriz de covariancia filogenetica
summary(survival)
library(devtools)
library(orchaRd)
library(patchwork)
library(tidyverse)
orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
s <- orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
tiff('s', units="in", width=5, height=6, res=1200, compression = 'lzw')
dev.off()
tiff('s.tiff', units="in", width=5, height=6, res=1200, compression = 'lzw')
orchard_plot(survival, xlab = "Odds ratio") +
labs(y = "Survival") +
scale_color_manual(values = "slateblue1") +
scale_fill_manual(values = "yellow") +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
axis.text.x = element_blank(),
legend.position = "top") +
coord_flip()
dev.off()
setwd("C:/Users/Cristina/Desktop/analise_dados_meta/letal e subletal")
dados_completos <- read.csv("let_sublet.csv", h= T, dec =".", sep = ",")
dados_completos$nature_x <- as.factor(dados_completos$nature_x)
dados_completos$study_type <- as.factor(dados_completos$study_type)
dados_completos$effect_type <- as.factor(dados_completos$effect_type)
dados_completos$pesticide_effect <- as.factor(dados_completos$pesticide_effect)
table(dados_completos$pesticide_effect)
table(dados_completos$study_type)
model.geral <- rma.mv(yi, vi, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.geral)
tiff('overall.tiff', units="in", width=5, height=6, res=1200, compression = 'lzw')
orchard_plot(model.geral, xlab = "Hedges' g") +
labs(y = "Overall effect") + # troca o nome do eixo y
scale_color_manual(values = "pink1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "seagreen3") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip() #para colocar a variavel resposta no y
dev.off()
library(orchaRd)
library(patchwork)
library(tidyverse)
library(ggplot2)
orchard_plot(model.geral, xlab = "Hedges' g") +
labs(y = "Overall effect") + # troca o nome do eixo y
scale_color_manual(values = "pink1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "seagreen3") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip() #para colocar a variavel resposta no y
orchard_plot(model.geral, xlab = "Hedges' g") +
labs(y = "Overall effect") + # troca o nome do eixo y
scale_color_manual(values = "pink1") + #troca a cor dos pontos do fundo
scale_fill_manual(values = "seagreen3") + #troca a cor do ponto central
theme_classic() + #tira a caixa em volta do grafico
theme(axis.text = element_text(size = 14, colour = "black"), #muda o tamanho do texto dos eixos e na cor do eixo
axis.title = element_text(size = 16), #muda o tamanho do titulo do eixo
axis.text.x = element_blank(), #Isso remove o texto automatico do eixo y
legend.position = "top") + #troca a posicao da legenda
coord_flip() #para colocar a variavel resposta no y
model.1 <- rma.mv(yi, vi, mods= ~pesticide_effect, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.1)
model.1f <- rma.mv(yi, vi, mods = ~pesticide_effect -1, random = list( ~1|id_code, ~1|study_type, ~1|sampling_method), method="REML",  # "REML" = multi-level
digits = 3, data = dados_completos)
summary(model.1f)
tiff('let_sublet.tiff', units="in", width=5, height=6, res=1200, compression = 'lzw')
orchard_plot(model.1f, mod = "pesticide_effect", xlab = "Hedges' g") +
labs(y = " ") +
scale_fill_manual(values = c( "slateblue1", "sienna1")) +
theme_classic() +
theme(axis.text = element_text(size = 14, colour = "black"),
axis.title = element_text(size = 16),
legend.position = "top") +
coord_flip() +
scale_y_discrete(labels = c("Lethal", "Sublethal"))
dev.off()
install.packages("PRISMAstatement")
library(PRISMAstatement)
prisma(found = 750,
found_other = 123,
no_dupes = 776,
screened = 776,
screen_exclusions = 13,
full_text = 763,
full_text_exclusions = 17,
qualitative = 746,
quantitative = 319,
width = 800, height = 800)
prisma(found = 750,
no_dupes = 776,
screened = 776,
screen_exclusions = 13,
full_text = 763,
full_text_exclusions = 17,
qualitative = 746,
quantitative = 319,
width = 800, height = 800)
prisma(found = 750,
found_other = ,
no_dupes = 776,
screened = 776,
screen_exclusions = 13,
full_text = 763,
full_text_exclusions = 17,
qualitative = 746,
quantitative = 319,
width = 800, height = 800)
prisma(found = 750,
found_other = 0,
no_dupes = 776,
screened = 776,
screen_exclusions = 13,
full_text = 763,
full_text_exclusions = 17,
qualitative = 746,
quantitative = 319,
width = 800, height = 800)
prisma(found = 750,
found_other = 123,
no_dupes = 776,
screened = 776,
screen_exclusions = 13,
full_text = 763,
full_text_exclusions = 17,
qualitative = 746,
quantitative = 319,
width = 800, height = 800)
